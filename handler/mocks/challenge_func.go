// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ChallengeFunc is an autogenerated mock type for the ChallengeFunc type
type ChallengeFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: bits, resource
func (_m *ChallengeFunc) Execute(bits uint, resource string) (string, error) {
	ret := _m.Called(bits, resource)

	var r0 string
	if rf, ok := ret.Get(0).(func(uint, string) string); ok {
		r0 = rf(bits, resource)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint, string) error); ok {
		r1 = rf(bits, resource)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewChallengeFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewChallengeFunc creates a new instance of ChallengeFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewChallengeFunc(t mockConstructorTestingTNewChallengeFunc) *ChallengeFunc {
	mock := &ChallengeFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// VerifyFunc is an autogenerated mock type for the VerifyFunc type
type VerifyFunc struct {
	mock.Mock
}

// Execute provides a mock function with given fields: calculated, challenge
func (_m *VerifyFunc) Execute(calculated string, challenge string) (bool, error) {
	ret := _m.Called(calculated, challenge)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string) bool); ok {
		r0 = rf(calculated, challenge)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(calculated, challenge)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewVerifyFunc interface {
	mock.TestingT
	Cleanup(func())
}

// NewVerifyFunc creates a new instance of VerifyFunc. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVerifyFunc(t mockConstructorTestingTNewVerifyFunc) *VerifyFunc {
	mock := &VerifyFunc{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
